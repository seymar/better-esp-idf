{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "hello_world",
            "type": "cppdbg",
            "request": "launch",

            // Start OpenOCD as debug server
            // Disabled for now for testing, run make oocd instead
            //"debugServerPath": "openocd-esp32.exe",
            "debugServerArgs": " \
                -f ${workspaceFolder}/tools/ftdi_mini_module.cfg \
                -f target/esp32.cfg -c 'init'",
            // Pattern to wait for to check whether OpenOCD has started
            "serverStarted": "Listening\\ on\\ port",
            // OpenOCD writes the pattern to stderr so enable filtering stderr
            "filterStderr": true,

            // Set up GDB to connect to it
            "MIMode": "gdb",
            "miDebuggerPath": "xtensa-esp32-elf-gdb.exe",
            "program": "${workspaceFolder}/build/hello_world.elf",
            "cwd": "${workspaceFolder}",
            "setupCommands": [
                { "text": "target remote :3333" },

                // Without this the debugger does not stop at app_main
                { "text": "file '${workspaceFolder}/build/hello_world.elf'" },

                // https://docs.espressif.com/projects/esp-idf/en/release-v4.2/esp32/api-guides/jtag-debugging/tips-and-quirks.html#what-is-the-meaning-of-debugger-s-startup-commands
                { "text": "set remote hardware-watchpoint-limit 2"},

                // Reset and halt the target
                { "text": "mon reset halt" },

                // Flush away the old state before reset
                { "text": "flushregs" },

                // Set temporary hardware breakpoint at app_main
                { "text": "thb app_main" }
            ],
            "logging": {
                "engineLogging": true
            },
        }
    ]
  }